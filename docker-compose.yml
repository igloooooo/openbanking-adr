version: "2.0"

services:
  nats:
    build:
      context: "./nats"
    expose:
      - "4222"
    ports:
      - "4222:4222"
      - "8222:8222"
    hostname: nats-server
    restart: always

  api:
    build:
      context: "./api"
    depends_on:
      - nats
      - jaeger
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.localhost`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.services.api.loadbalancer.server.port=8789"
    restart: always
    environment:
      NATS_URL: nats://nats:4222
      NATS_USER: ruser
      NATS_PW: T0pS3cr3t
      JAEGER_URL: jaeger
      API_PORT: 8789
      API_HOST: 0.0.0.0
      HEMERA_LOG_LEVEL: error

  scheduler-service:
    build:
      context: "./scheduler-service"
    links:
      - nats
    depends_on:
      - nats
      - redis
      - jaeger
    restart: always
    environment:
      NATS_URL: nats://nats:4222
      NATS_USER: ruser
      NATS_PW: T0pS3cr3t
      JAEGER_URL: jaeger
      HEMERA_LOG_LEVEL: error

  consent-service:
    build:
      context: "./consent-service"
    links:
      - nats
    depends_on:
      - nats
      - redis
      - jaeger
    restart: always
    environment:
      NATS_URL: nats://nats:4222
      NATS_USER: ruser
      NATS_PW: T0pS3cr3t
      JAEGER_URL: jaeger
      HEMERA_LOG_LEVEL: error

  registration-management-service:
    build:
      context: "./registration-management-service"
    links:
      - nats
    depends_on:
      - nats
      - redis
      - jaeger
    restart: always
    environment:
      NATS_URL: nats://nats:4222
      NATS_USER: ruser
      NATS_PW: T0pS3cr3t
      JAEGER_URL: jaeger
      HEMERA_LOG_LEVEL: error

  ingestion-worker:
    build:
      context: "./ingestion-worker"
    links:
      - nats
    depends_on:
      - nats
      - redis
      - jaeger
    restart: always
    environment:
      NATS_URL: nats://nats:4222
      NATS_USER: ruser
      NATS_PW: T0pS3cr3t
      JAEGER_URL: jaeger
      HEMERA_LOG_LEVEL: error

  persistent-service:
    build:
      context: "./persistent-service"
    links:
      - nats
    depends_on:
      - nats
      - redis
      - jaeger
    restart: always
    environment:
      NATS_URL: nats://nats:4222
      NATS_USER: ruser
      NATS_PW: T0pS3cr3t
      JAEGER_URL: jaeger
      HEMERA_LOG_LEVEL: error

  cache-service:
    build:
      context: "./cache-service"
    links:
      - nats
      - redis
    depends_on:
      - nats
      - redis
    restart: always
    environment:
      REDIS_PORT: 6379
      REDIS_URL: redis
      NATS_URL: nats://nats:4222
      NATS_USER: ruser
      NATS_PW: T0pS3cr3t
      HEMERA_LOG_LEVEL: error

  natsboard:
    build:
      context: "./natsboard"
    depends_on:
      - nats
    links:
      - nats
    ports:
      - "3000:3000"
      - "3001:3001"

  redis:
    image: redis:alpine
    expose:
      - "6379"
    ports:
      - "6379:6379"

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "6832:6832"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
    environment: 
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411

  traefik:
    image: "traefik:v2.2"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "8182:80"
      - "8181:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
